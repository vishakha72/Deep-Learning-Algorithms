# -*- coding: utf-8 -*-
"""DL_II_1_24.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-CyCSZNHEVxoDRR-AnJlLrgYOXwcgOLO
"""

import numpy as np
import pandas as pd
import re
import string
import time

from google.colab import drive
drive.mount('/content/drive')

!ls "/content/drive/MyDrive/colab"

with open('/content/drive/MyDrive/colab/eminem_songs_lyrics.txt', 'r') as df:
  data = df.read()

import string

text_str = data.translate(str.maketrans('', '', string.punctuation))
text = text_str.lower()
print(text)

res = len(text.split())

print("words " + str(res))
print("sentence", len(text))

def convert_text_to_array_of_words(text):

  array_as_string = "["
  for word in text.split(" "):
    array_as_string += f"'{word}',"
  array_as_string = array_as_string[:-1] + "]"
  return array_as_string


if __name__ == "__main__":
  print(convert_text_to_array_of_words(text))

"""def word_count(text_str):
  counts = dict()
  words = text_str.split()

  for word in words:
    if word in counts:
      counts[word] += 1
    else:
      counts[word] = 1

  return counts
print(word_count(text))"""

initial_word = {}
second_word = {}
transitions = {}

rows = text.strip().split("\n")

for row in rows:
  first_word = row.split()[0]
  print(first_word)

import re



rows = re.split("\s+", text)

for row in rows:
  if row.startswith("."):
    first_word = row.split()[0]
    print(first_word)

print(first_word)

def new_dict(str):
    lines=text.split('\n')
    word_dictionary={}

    for line in lines:
        words=line.split()
        if len(words)>1:
            curr =words[0]
            nex=words[1]
            if curr in word_dictionary:
                word_dictionary[curr].append(nex)
            else:
                word_dictionary[curr]=[nex]

    return word_dictionary

result=new_dict(data)
print(result)

def new_dict(str):
    words=text.split()
    word_dictionary={}
    for i in range(len(words)-1):
        curr=words[i]
        nex=words[i+1]

        if curr in word_dictionary:
            word_dictionary[curr].append(nex)
        else:
            word_dictionary[curr]=[nex]

    return word_dictionary

result=new_dict(data)
print(result)

def remove_blank_lines_from_paragraphs(text):
    paragraphs = text.split('\n\n')

    cleaned_paragraphs = []
    for paragraph in paragraphs:
        non_blank_lines = [line.strip() for line in paragraph.splitlines() if line.strip()]
        cleaned_paragraph = '\n'.join(non_blank_lines)
        cleaned_paragraphs.append(cleaned_paragraph)

    cleaned_text = '\n\n'.join(cleaned_paragraphs)

    return cleaned_text

text_with_blank_lines = text

cleaned_text = remove_blank_lines_from_paragraphs(text_with_blank_lines)
print(cleaned_text)

print(splitted)

first_word = ''
for character in text:
    if character != ' ':
        first_word = first_word + character
    else:
        break

print(first_word)

count = 0
for words in text:
  if(words==0):
    count[initial_word] += 1
  else:
    count[initial_word] = 0
return count





